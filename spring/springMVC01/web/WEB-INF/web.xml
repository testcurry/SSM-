<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--配置DispatherServlet前端控制器-->
    <servlet>
        <servlet-name>springDispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--        <init-param>-->
        <!--            <param-name>contextConfigLocation</param-name>-->
        <!--            <param-value>classpath:springDispatcherServlet.xml</param-value>-->
        <!--        </init-param>-->
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>springDispatcherServlet</servlet-name>
        <!--
            1、/*和/会拦截所有请求
            2、/会拦截所有请求但不会拦截*.jsp页面
            3、/*会拦截所有请求，包括*.jsp页面
            解释：为什么配置url-pattern=/静态资源不能访问：
            1、处理*.jsp是Tomcat做的事，Tomcat中有一个web.xml中有一个defaultServlet的url-pattern=/
            2、我们的web.xml中DispatherServlet的url-pattern=/相当于重写了父类的defaultServlet配置
            3、如果Tomcat中有一个web.xml中有一个defaultServlet的url-pattern=/生效的话，静态资源可以经Tomcat正常处理并返回
            4、但是我们的DispatcherServlet禁用了Tomcat处理静态资源的能力
            5、当我们请求静态资源的时候，静态资源会由DispatcherServlet处理，它会找@RequestMapping注解标注的请求路径哪个是
            @RequestMapping("/index.html")，所以找不到就报错了
            6、报错信息：org.springframework.web.servlet.PageNotFound.noHandlerFound No mapping for GET /springmvc01/index.html

            解释：为什么配置url-pattern=/jsp可以访问：
            1、Tomcat中有一个web.xml中有一个JspServlet的url-pattern=*.jsp，是处理所有jsp请求的
            2、我们DispatcherServlet中没有覆盖*.jsp的配置，所以Tomcat会帮我们处理jsp的请求。所以jsp资源可以访问

            注意：url-pattern=/*是拦截所有的请求，这个比较恐怖
                -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>