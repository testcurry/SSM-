<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:utils="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util.xsd">

    <!--    实验4：正确的为各种属性赋值-->

    <bean id="person01" class="com.testcy.bean.Person">
        <!--    测试使用null值 、-->
        <property name="lastName">
            <null></null>
        </property>
    </bean>


    <!--    引用类型赋值（引用其他bean、引用内部bean）-->
    <bean id="car01" class="com.testcy.bean.Car">
        <property name="carName" value="宝马"></property>
        <property name="color" value="黑色"></property>
        <property name="price" value="300000"></property>
    </bean>
    <!--引入外部bean-->
    <bean id="person02" class="com.testcy.bean.Person">
        <!--        给类类型属性赋值，引入外部bean-->
        <property name="car" ref="car01"></property>
    </bean>
    <!--    给类类型属性赋值，在内部赋值-->
    <bean id="person03" class="com.testcy.bean.Person">

        <property name="car">
            <bean id="carInner" class="com.testcy.bean.Car">
                <property name="price" value="200000"></property>
            </bean>
        </property>
    </bean>
    <!--    集合类型赋值（List、Map、Properties）、-->

    <bean id="book01" class="com.testcy.bean.Book">
        <property name="author" value="曹雪芹"></property>
        <property name="bookName" value="红楼梦"></property>
    </bean>

    <bean id="person04" class="com.testcy.bean.Person">
        <!--        为list属性赋值-->
        <property name="books">
            <list>
                <bean class="com.testcy.bean.Book" p:bookName="西游记"></bean>
                <!--                因为外部bean-->
                <ref bean="book01"></ref>
            </list>
        </property>
        <!--        给map属性赋值-->
        <property name="map">
            <map>
                <entry key="key01" value="张三"></entry>
                <entry key="key02" value="18"></entry>
                <entry key="key03" value-ref="book01"></entry>
                <entry key="key04">
                    <bean class="com.testcy.bean.Book">
                        <property name="bookName" value="水浒传"></property>
                        <property name="author" value="罗贯中"></property>
                    </bean>
                </entry>
                <!--                <entry key="key05">-->
                <!--                    <map></map>-->
                <!--                </entry>-->
            </map>
        </property>

        <!--        给properties类型的属性赋值,key,value都是字符串类型-->
        <property name="properties">
            <props>
                <prop key="username">root</prop>
                <prop key="url">jdbc:mysql:///test</prop>
            </props>
        </property>
    </bean>
    <!--    util名称空间创建集合类型的bean-->
    <utils:map id="mapUtils">
        <entry key="key01" value="张三"></entry>
        <entry key="key02" value="18"></entry>
        <entry key="key03" value-ref="book01"></entry>
        <entry key="key04">
            <bean class="com.testcy.bean.Book">
                <property name="bookName" value="水浒传111"></property>
                <property name="author" value="罗贯中"></property>
            </bean>
        </entry>
    </utils:map>

    <bean id="person05" class="com.testcy.bean.Person">
        <property name="map" ref="mapUtils"></property>
    </bean>
    <!--    级联属性赋值-->
    <bean id="person06" class="com.testcy.bean.Person">
        <property name="car" ref="car01"></property>
        <property name="car.price" value="100000"></property>
    </bean>

    <!--
    实验6：通过继承实现bean配置信息的重用
    实验7：通过abstract属性创建一个模板bean
    实验8：bean之间的依赖
    实验9：测试bean的作用域，分别创建单实例和多实例的bean★
    -->
<!--        实验6：通过继承实现bean配置信息的重用  实验7：通过abstract属性创建一个模板bean-->
    <bean id="person07" class="com.testcy.bean.Person" abstract="true">
        <property name="lastName" value="Curry"></property>
        <property name="age" value="18"></property>
        <property name="email" value="test@qq.com"></property>
        <property name="gender" value="男"></property>
    </bean>

<!--    parnet表示当前bean的配置信息继承于哪个bean-->
    <bean id="person08" class="com.testcy.bean.Person" parent="person07">
        <property name="lastName" value="Tom"></property>
    </bean>
<!--      实验8：bean之间的依赖-->
    <bean id="book" class="com.testcy.bean.Book" depends-on="car,person"></bean>
    <bean id="car" class="com.testcy.bean.Car"></bean>
    <bean id="person" class="com.testcy.bean.Person"></bean>

</beans>