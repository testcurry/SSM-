<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--    实验1：通过IOC容器创建对象，并为属性赋值★-->
    <bean id="person01" class="com.testcy.bean.Person">
        <property name="lastName" value="Curry"></property>
        <property name="age" value="18"></property>
        <property name="email" value="test@qq.com"></property>
        <property name="gender" value="男"></property>

    </bean>

    <!--    实验2：根据bean的类型从IOC容器中获取bean的实例★-->
    <bean id="person02" class="com.testcy.bean.Person">
        <property name="lastName" value="Curry"></property>
        <property name="age" value="18"></property>
        <property name="email" value="test@qq.com"></property>
        <property name="gender" value="男"></property>

    </bean>


    <!--    实验3：-->
    <bean id="person03" class="com.testcy.bean.Person">
        <constructor-arg name="lastName" value="小明"></constructor-arg>
        <constructor-arg name="age" value="18"></constructor-arg>
        <constructor-arg name="email" value="test@vip.com"></constructor-arg>
        <constructor-arg name="gender" value="男"></constructor-arg>
    </bean>


    <!--    通过构造器为bean的属性赋值（index,type属性介绍）-->
    <bean id="person04" class="com.testcy.bean.Person">
        <constructor-arg value="18" index="0" type="java.lang.Integer"></constructor-arg>
        <constructor-arg value="男"></constructor-arg>
        <constructor-arg value="test@vip.com"></constructor-arg>
        <constructor-arg value="小明"></constructor-arg>
    </bean>
    <!--    通过p名称空间为bean赋值-->

    <bean id="person06" class="com.testcy.bean.Person"
          p:age="21" p:email="testvip.com" p:gender="女" p:lastName="狗头">

    </bean>

</beans>